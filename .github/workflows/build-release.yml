name: Android Build & Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build & Release APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # Debug step to verify the unsigned APK location
      - name: Build Release APK
        run: |
          chmod +x ./gradlew
          ./gradlew clean assembleRelease --stacktrace
          echo "Checking release directory contents:"
          ls -R app/build/outputs/apk/release/

          # Decode and save keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/signing.keystore
          
          # Verify keystore file
          echo "Keystore file details:"
          ls -l app/signing.keystore
        
          # List keystore contents
          echo "Keystore contents:"
          keytool -list -v -keystore app/signing.keystore -storepass "${{ secrets.KEYSTORE_PASSWORD }}" | grep "Alias name:"
          echo "::debug::KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}" # debug log
          echo "KEYSTORE_BASE64 (standard echo): ${{ secrets.KEYSTORE_BASE64 }}" # visible log

      # Modified signing step with explicit paths
      - name: Sign Android Release
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          output: app/build/outputs/apk/release/app-release-signed.apk
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
         


      # Debug step to verify signed APK
      - name: Verify Signed APK
        run: |
          echo "Signed Release File: ${{ steps.sign_app.outputs.signedReleaseFile }}"
          echo "Checking if file exists:"
          ls -l ${{ steps.sign_app.outputs.signedReleaseFile }} || echo "File not found!"
          
          echo "Checking release directory contents:"
          ls -R app/build/outputs/apk/release/

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: Release APK
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}